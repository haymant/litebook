/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var rpc_base_pb = require('./rpc_base_pb.js');
var rpc_admin_pb = require('./rpc_admin_pb.js');
var rpc_fix_admin_pb = require('./rpc_fix_admin_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.AverageFillPrice', null, global);
goog.exportSymbol('proto.ExecutionReportSummary', null, global);
goog.exportSymbol('proto.ExecutionType', null, global);
goog.exportSymbol('proto.FIXOrder', null, global);
goog.exportSymbol('proto.FixMessage', null, global);
goog.exportSymbol('proto.Hierarchy', null, global);
goog.exportSymbol('proto.Instrument', null, global);
goog.exportSymbol('proto.MatpOrderType', null, global);
goog.exportSymbol('proto.Order', null, global);
goog.exportSymbol('proto.OrderBase', null, global);
goog.exportSymbol('proto.OrderCapacity', null, global);
goog.exportSymbol('proto.OrderStatusType', null, global);
goog.exportSymbol('proto.OrderSummary', null, global);
goog.exportSymbol('proto.OrderType', null, global);
goog.exportSymbol('proto.Originator', null, global);
goog.exportSymbol('proto.Position', null, global);
goog.exportSymbol('proto.PositionEffect', null, global);
goog.exportSymbol('proto.PositionKey', null, global);
goog.exportSymbol('proto.Report', null, global);
goog.exportSymbol('proto.ReportType', null, global);
goog.exportSymbol('proto.SecurityType', null, global);
goog.exportSymbol('proto.Side', null, global);
goog.exportSymbol('proto.TimeInForce', null, global);
goog.exportSymbol('proto.TradeMessage', null, global);
goog.exportSymbol('proto.TradeMessageType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Instrument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Instrument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Instrument.displayName = 'proto.Instrument';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Instrument.prototype.toObject = function(opt_includeInstance) {
  return proto.Instrument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Instrument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Instrument.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    securitytype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Instrument}
 */
proto.Instrument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Instrument;
  return proto.Instrument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Instrument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Instrument}
 */
proto.Instrument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {!proto.SecurityType} */ (reader.readEnum());
      msg.setSecuritytype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Instrument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Instrument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Instrument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Instrument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecuritytype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.Instrument.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Instrument.prototype.setSymbol = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SecurityType securityType = 2;
 * @return {!proto.SecurityType}
 */
proto.Instrument.prototype.getSecuritytype = function() {
  return /** @type {!proto.SecurityType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.SecurityType} value */
proto.Instrument.prototype.setSecuritytype = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OrderSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OrderSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.OrderSummary.displayName = 'proto.OrderSummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OrderSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.OrderSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OrderSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OrderSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderstatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    report: (f = msg.getReport()) && proto.TradeMessage.toObject(includeInstance, f),
    rootorderid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cumulativequantity: (f = msg.getCumulativequantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    account: jspb.Message.getFieldWithDefault(msg, 6, ""),
    brokerid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    side: jspb.Message.getFieldWithDefault(msg, 8, 0),
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    averageprice: (f = msg.getAverageprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    lastquantity: (f = msg.getLastquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    leavesquantity: (f = msg.getLeavesquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderquantity: (f = msg.getOrderquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    lastprice: (f = msg.getLastprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderprice: (f = msg.getOrderprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    sendingtime: (f = msg.getSendingtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transacttime: (f = msg.getTransacttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    user: (f = msg.getUser()) && rpc_admin_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OrderSummary}
 */
proto.OrderSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OrderSummary;
  return proto.OrderSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OrderSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OrderSummary}
 */
proto.OrderSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.OrderStatusType} */ (reader.readEnum());
      msg.setOrderstatus(value);
      break;
    case 2:
      var value = new proto.TradeMessage;
      reader.readMessage(value,proto.TradeMessage.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootorderid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 5:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setCumulativequantity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerid(value);
      break;
    case 8:
      var value = /** @type {!proto.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 9:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 10:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setAverageprice(value);
      break;
    case 11:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastquantity(value);
      break;
    case 12:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLeavesquantity(value);
      break;
    case 13:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setOrderquantity(value);
      break;
    case 14:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastprice(value);
      break;
    case 15:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setOrderprice(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSendingtime(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTransacttime(value);
      break;
    case 18:
      var value = new rpc_admin_pb.User;
      reader.readMessage(value,rpc_admin_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OrderSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OrderSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OrderSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OrderSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.TradeMessage.serializeBinaryToWriter
    );
  }
  f = message.getRootorderid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCumulativequantity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBrokerid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getAverageprice();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLastquantity();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLeavesquantity();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderquantity();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLastprice();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderprice();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getSendingtime();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTransacttime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      rpc_admin_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderStatusType orderStatus = 1;
 * @return {!proto.OrderStatusType}
 */
proto.OrderSummary.prototype.getOrderstatus = function() {
  return /** @type {!proto.OrderStatusType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.OrderStatusType} value */
proto.OrderSummary.prototype.setOrderstatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TradeMessage report = 2;
 * @return {?proto.TradeMessage}
 */
proto.OrderSummary.prototype.getReport = function() {
  return /** @type{?proto.TradeMessage} */ (
    jspb.Message.getWrapperField(this, proto.TradeMessage, 2));
};


/** @param {?proto.TradeMessage|undefined} value */
proto.OrderSummary.prototype.setReport = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.OrderSummary.prototype.clearReport = function() {
  this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasReport = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string rootOrderId = 3;
 * @return {string}
 */
proto.OrderSummary.prototype.getRootorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.OrderSummary.prototype.setRootorderid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string orderId = 4;
 * @return {string}
 */
proto.OrderSummary.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.OrderSummary.prototype.setOrderid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Qty cumulativeQuantity = 5;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getCumulativequantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 5));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setCumulativequantity = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.OrderSummary.prototype.clearCumulativequantity = function() {
  this.setCumulativequantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasCumulativequantity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string account = 6;
 * @return {string}
 */
proto.OrderSummary.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.OrderSummary.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string brokerId = 7;
 * @return {string}
 */
proto.OrderSummary.prototype.getBrokerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.OrderSummary.prototype.setBrokerid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Side side = 8;
 * @return {!proto.Side}
 */
proto.OrderSummary.prototype.getSide = function() {
  return /** @type {!proto.Side} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.Side} value */
proto.OrderSummary.prototype.setSide = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Instrument instrument = 9;
 * @return {?proto.Instrument}
 */
proto.OrderSummary.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 9));
};


/** @param {?proto.Instrument|undefined} value */
proto.OrderSummary.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.OrderSummary.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Qty averagePrice = 10;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getAverageprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 10));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setAverageprice = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.OrderSummary.prototype.clearAverageprice = function() {
  this.setAverageprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasAverageprice = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Qty lastQuantity = 11;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getLastquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 11));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setLastquantity = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.OrderSummary.prototype.clearLastquantity = function() {
  this.setLastquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasLastquantity = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Qty leavesQuantity = 12;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getLeavesquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 12));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setLeavesquantity = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.OrderSummary.prototype.clearLeavesquantity = function() {
  this.setLeavesquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasLeavesquantity = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Qty orderQuantity = 13;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getOrderquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 13));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setOrderquantity = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.OrderSummary.prototype.clearOrderquantity = function() {
  this.setOrderquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasOrderquantity = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Qty lastPrice = 14;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getLastprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 14));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setLastprice = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.OrderSummary.prototype.clearLastprice = function() {
  this.setLastprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasLastprice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Qty orderPrice = 15;
 * @return {?proto.Qty}
 */
proto.OrderSummary.prototype.getOrderprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 15));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderSummary.prototype.setOrderprice = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.OrderSummary.prototype.clearOrderprice = function() {
  this.setOrderprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasOrderprice = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp sendingTime = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.OrderSummary.prototype.getSendingtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.OrderSummary.prototype.setSendingtime = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.OrderSummary.prototype.clearSendingtime = function() {
  this.setSendingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasSendingtime = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp transactTime = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.OrderSummary.prototype.getTransacttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.OrderSummary.prototype.setTransacttime = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.OrderSummary.prototype.clearTransacttime = function() {
  this.setTransacttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasTransacttime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional User user = 18;
 * @return {?proto.User}
 */
proto.OrderSummary.prototype.getUser = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, rpc_admin_pb.User, 18));
};


/** @param {?proto.User|undefined} value */
proto.OrderSummary.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.OrderSummary.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderSummary.prototype.hasUser = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Report = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Report, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Report.displayName = 'proto.Report';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Report.prototype.toObject = function(opt_includeInstance) {
  return proto.Report.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Report} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Report.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    actor: (f = msg.getActor()) && rpc_admin_pb.User.toObject(includeInstance, f),
    viewer: (f = msg.getViewer()) && rpc_admin_pb.User.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && proto.FixMessage.toObject(includeInstance, f),
    sessionid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    msgseqnum: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sendingtime: (f = msg.getSendingtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    reporttype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    brokerid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    reportid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    originator: jspb.Message.getFieldWithDefault(msg, 11, 0),
    hierarchy: jspb.Message.getFieldWithDefault(msg, 12, 0),
    transacttime: (f = msg.getTransacttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    text: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Report}
 */
proto.Report.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Report;
  return proto.Report.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Report} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Report}
 */
proto.Report.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = new rpc_admin_pb.User;
      reader.readMessage(value,rpc_admin_pb.User.deserializeBinaryFromReader);
      msg.setActor(value);
      break;
    case 3:
      var value = new rpc_admin_pb.User;
      reader.readMessage(value,rpc_admin_pb.User.deserializeBinaryFromReader);
      msg.setViewer(value);
      break;
    case 4:
      var value = new proto.FixMessage;
      reader.readMessage(value,proto.FixMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgseqnum(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSendingtime(value);
      break;
    case 8:
      var value = /** @type {!proto.ReportType} */ (reader.readEnum());
      msg.setReporttype(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReportid(value);
      break;
    case 11:
      var value = /** @type {!proto.Originator} */ (reader.readEnum());
      msg.setOriginator(value);
      break;
    case 12:
      var value = /** @type {!proto.Hierarchy} */ (reader.readEnum());
      msg.setHierarchy(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTransacttime(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Report.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Report.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Report} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Report.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      rpc_admin_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getViewer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_admin_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.FixMessage.serializeBinaryToWriter
    );
  }
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMsgseqnum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSendingtime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReporttype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getBrokerid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getReportid();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getOriginator();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getHierarchy();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getTransacttime();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string orderId = 1;
 * @return {string}
 */
proto.Report.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Report.prototype.setOrderid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional User actor = 2;
 * @return {?proto.User}
 */
proto.Report.prototype.getActor = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, rpc_admin_pb.User, 2));
};


/** @param {?proto.User|undefined} value */
proto.Report.prototype.setActor = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.Report.prototype.clearActor = function() {
  this.setActor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Report.prototype.hasActor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User viewer = 3;
 * @return {?proto.User}
 */
proto.Report.prototype.getViewer = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, rpc_admin_pb.User, 3));
};


/** @param {?proto.User|undefined} value */
proto.Report.prototype.setViewer = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.Report.prototype.clearViewer = function() {
  this.setViewer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Report.prototype.hasViewer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FixMessage message = 4;
 * @return {?proto.FixMessage}
 */
proto.Report.prototype.getMessage = function() {
  return /** @type{?proto.FixMessage} */ (
    jspb.Message.getWrapperField(this, proto.FixMessage, 4));
};


/** @param {?proto.FixMessage|undefined} value */
proto.Report.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.Report.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Report.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string sessionId = 5;
 * @return {string}
 */
proto.Report.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Report.prototype.setSessionid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 msgSeqNum = 6;
 * @return {number}
 */
proto.Report.prototype.getMsgseqnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Report.prototype.setMsgseqnum = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp sendingTime = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Report.prototype.getSendingtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.Report.prototype.setSendingtime = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.Report.prototype.clearSendingtime = function() {
  this.setSendingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Report.prototype.hasSendingtime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ReportType reportType = 8;
 * @return {!proto.ReportType}
 */
proto.Report.prototype.getReporttype = function() {
  return /** @type {!proto.ReportType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.ReportType} value */
proto.Report.prototype.setReporttype = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string brokerId = 9;
 * @return {string}
 */
proto.Report.prototype.getBrokerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.Report.prototype.setBrokerid = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 reportId = 10;
 * @return {number}
 */
proto.Report.prototype.getReportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Report.prototype.setReportid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional Originator originator = 11;
 * @return {!proto.Originator}
 */
proto.Report.prototype.getOriginator = function() {
  return /** @type {!proto.Originator} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.Originator} value */
proto.Report.prototype.setOriginator = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Hierarchy hierarchy = 12;
 * @return {!proto.Hierarchy}
 */
proto.Report.prototype.getHierarchy = function() {
  return /** @type {!proto.Hierarchy} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.Hierarchy} value */
proto.Report.prototype.setHierarchy = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional google.protobuf.Timestamp transactTime = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Report.prototype.getTransacttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.Report.prototype.setTransacttime = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.Report.prototype.clearTransacttime = function() {
  this.setTransacttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Report.prototype.hasTransacttime = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string text = 14;
 * @return {string}
 */
proto.Report.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.Report.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExecutionReportSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExecutionReportSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExecutionReportSummary.displayName = 'proto.ExecutionReportSummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExecutionReportSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.ExecutionReportSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExecutionReportSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExecutionReportSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    originalorderid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    account: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rootorderid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    side: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cumulativequantity: (f = msg.getCumulativequantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    effectivecumulativequantity: (f = msg.getEffectivecumulativequantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    averageprice: (f = msg.getAverageprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    lastquantity: (f = msg.getLastquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    lastprice: (f = msg.getLastprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderstatus: jspb.Message.getFieldWithDefault(msg, 12, 0),
    executiontype: jspb.Message.getFieldWithDefault(msg, 13, 0),
    sendingtime: (f = msg.getSendingtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    viewer: (f = msg.getViewer()) && rpc_admin_pb.User.toObject(includeInstance, f),
    actor: (f = msg.getActor()) && rpc_admin_pb.User.toObject(includeInstance, f),
    report: (f = msg.getReport()) && proto.Report.toObject(includeInstance, f),
    brokerorderid: jspb.Message.getFieldWithDefault(msg, 18, ""),
    executionid: jspb.Message.getFieldWithDefault(msg, 19, ""),
    leavesquantity: (f = msg.getLeavesquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderquantity: (f = msg.getOrderquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    ordertype: jspb.Message.getFieldWithDefault(msg, 22, 0),
    price: (f = msg.getPrice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExecutionReportSummary}
 */
proto.ExecutionReportSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExecutionReportSummary;
  return proto.ExecutionReportSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExecutionReportSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExecutionReportSummary}
 */
proto.ExecutionReportSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalorderid(value);
      break;
    case 3:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootorderid(value);
      break;
    case 6:
      var value = /** @type {!proto.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 7:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setCumulativequantity(value);
      break;
    case 8:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setEffectivecumulativequantity(value);
      break;
    case 9:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setAverageprice(value);
      break;
    case 10:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastquantity(value);
      break;
    case 11:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastprice(value);
      break;
    case 12:
      var value = /** @type {!proto.OrderStatusType} */ (reader.readEnum());
      msg.setOrderstatus(value);
      break;
    case 13:
      var value = /** @type {!proto.ExecutionType} */ (reader.readEnum());
      msg.setExecutiontype(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSendingtime(value);
      break;
    case 15:
      var value = new rpc_admin_pb.User;
      reader.readMessage(value,rpc_admin_pb.User.deserializeBinaryFromReader);
      msg.setViewer(value);
      break;
    case 16:
      var value = new rpc_admin_pb.User;
      reader.readMessage(value,rpc_admin_pb.User.deserializeBinaryFromReader);
      msg.setActor(value);
      break;
    case 17:
      var value = new proto.Report;
      reader.readMessage(value,proto.Report.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerorderid(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionid(value);
      break;
    case 20:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLeavesquantity(value);
      break;
    case 21:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setOrderquantity(value);
      break;
    case 22:
      var value = /** @type {!proto.OrderType} */ (reader.readEnum());
      msg.setOrdertype(value);
      break;
    case 23:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 24:
      var value = /** @type {!proto.TimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExecutionReportSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExecutionReportSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExecutionReportSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExecutionReportSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginalorderid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRootorderid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCumulativequantity();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getEffectivecumulativequantity();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getAverageprice();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLastquantity();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLastprice();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getExecutiontype();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getSendingtime();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getViewer();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      rpc_admin_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getActor();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      rpc_admin_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.Report.serializeBinaryToWriter
    );
  }
  f = message.getBrokerorderid();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getExecutionid();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLeavesquantity();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderquantity();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrdertype();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
};


/**
 * optional string orderId = 1;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setOrderid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string originalOrderId = 2;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getOriginalorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setOriginalorderid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Instrument instrument = 3;
 * @return {?proto.Instrument}
 */
proto.ExecutionReportSummary.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 3));
};


/** @param {?proto.Instrument|undefined} value */
proto.ExecutionReportSummary.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ExecutionReportSummary.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string account = 4;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string rootOrderId = 5;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getRootorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setRootorderid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Side side = 6;
 * @return {!proto.Side}
 */
proto.ExecutionReportSummary.prototype.getSide = function() {
  return /** @type {!proto.Side} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.Side} value */
proto.ExecutionReportSummary.prototype.setSide = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Qty cumulativeQuantity = 7;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getCumulativequantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 7));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setCumulativequantity = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.ExecutionReportSummary.prototype.clearCumulativequantity = function() {
  this.setCumulativequantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasCumulativequantity = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Qty effectiveCumulativeQuantity = 8;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getEffectivecumulativequantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 8));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setEffectivecumulativequantity = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.ExecutionReportSummary.prototype.clearEffectivecumulativequantity = function() {
  this.setEffectivecumulativequantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasEffectivecumulativequantity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Qty averagePrice = 9;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getAverageprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 9));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setAverageprice = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.ExecutionReportSummary.prototype.clearAverageprice = function() {
  this.setAverageprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasAverageprice = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Qty lastQuantity = 10;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getLastquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 10));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setLastquantity = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.ExecutionReportSummary.prototype.clearLastquantity = function() {
  this.setLastquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasLastquantity = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Qty lastPrice = 11;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getLastprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 11));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setLastprice = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.ExecutionReportSummary.prototype.clearLastprice = function() {
  this.setLastprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasLastprice = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional OrderStatusType orderStatus = 12;
 * @return {!proto.OrderStatusType}
 */
proto.ExecutionReportSummary.prototype.getOrderstatus = function() {
  return /** @type {!proto.OrderStatusType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.OrderStatusType} value */
proto.ExecutionReportSummary.prototype.setOrderstatus = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional ExecutionType executionType = 13;
 * @return {!proto.ExecutionType}
 */
proto.ExecutionReportSummary.prototype.getExecutiontype = function() {
  return /** @type {!proto.ExecutionType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.ExecutionType} value */
proto.ExecutionReportSummary.prototype.setExecutiontype = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp sendingTime = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ExecutionReportSummary.prototype.getSendingtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.ExecutionReportSummary.prototype.setSendingtime = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.ExecutionReportSummary.prototype.clearSendingtime = function() {
  this.setSendingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasSendingtime = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional User viewer = 15;
 * @return {?proto.User}
 */
proto.ExecutionReportSummary.prototype.getViewer = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, rpc_admin_pb.User, 15));
};


/** @param {?proto.User|undefined} value */
proto.ExecutionReportSummary.prototype.setViewer = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.ExecutionReportSummary.prototype.clearViewer = function() {
  this.setViewer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasViewer = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional User actor = 16;
 * @return {?proto.User}
 */
proto.ExecutionReportSummary.prototype.getActor = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, rpc_admin_pb.User, 16));
};


/** @param {?proto.User|undefined} value */
proto.ExecutionReportSummary.prototype.setActor = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.ExecutionReportSummary.prototype.clearActor = function() {
  this.setActor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasActor = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Report report = 17;
 * @return {?proto.Report}
 */
proto.ExecutionReportSummary.prototype.getReport = function() {
  return /** @type{?proto.Report} */ (
    jspb.Message.getWrapperField(this, proto.Report, 17));
};


/** @param {?proto.Report|undefined} value */
proto.ExecutionReportSummary.prototype.setReport = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.ExecutionReportSummary.prototype.clearReport = function() {
  this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasReport = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string brokerOrderId = 18;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getBrokerorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setBrokerorderid = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string executionId = 19;
 * @return {string}
 */
proto.ExecutionReportSummary.prototype.getExecutionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.ExecutionReportSummary.prototype.setExecutionid = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional Qty leavesQuantity = 20;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getLeavesquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 20));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setLeavesquantity = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.ExecutionReportSummary.prototype.clearLeavesquantity = function() {
  this.setLeavesquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasLeavesquantity = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Qty orderQuantity = 21;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getOrderquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 21));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setOrderquantity = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.ExecutionReportSummary.prototype.clearOrderquantity = function() {
  this.setOrderquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasOrderquantity = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional OrderType orderType = 22;
 * @return {!proto.OrderType}
 */
proto.ExecutionReportSummary.prototype.getOrdertype = function() {
  return /** @type {!proto.OrderType} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {!proto.OrderType} value */
proto.ExecutionReportSummary.prototype.setOrdertype = function(value) {
  jspb.Message.setProto3EnumField(this, 22, value);
};


/**
 * optional Qty price = 23;
 * @return {?proto.Qty}
 */
proto.ExecutionReportSummary.prototype.getPrice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 23));
};


/** @param {?proto.Qty|undefined} value */
proto.ExecutionReportSummary.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


proto.ExecutionReportSummary.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ExecutionReportSummary.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional TimeInForce timeInForce = 24;
 * @return {!proto.TimeInForce}
 */
proto.ExecutionReportSummary.prototype.getTimeinforce = function() {
  return /** @type {!proto.TimeInForce} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {!proto.TimeInForce} value */
proto.ExecutionReportSummary.prototype.setTimeinforce = function(value) {
  jspb.Message.setProto3EnumField(this, 24, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AverageFillPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AverageFillPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.AverageFillPrice.displayName = 'proto.AverageFillPrice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AverageFillPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.AverageFillPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AverageFillPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AverageFillPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    side: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cumulativequantity: (f = msg.getCumulativequantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    averageprice: (f = msg.getAverageprice()) && rpc_base_pb.Qty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AverageFillPrice}
 */
proto.AverageFillPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AverageFillPrice;
  return proto.AverageFillPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AverageFillPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AverageFillPrice}
 */
proto.AverageFillPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 2:
      var value = /** @type {!proto.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 3:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setCumulativequantity(value);
      break;
    case 4:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setAverageprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AverageFillPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AverageFillPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AverageFillPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AverageFillPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCumulativequantity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getAverageprice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
};


/**
 * optional Instrument instrument = 1;
 * @return {?proto.Instrument}
 */
proto.AverageFillPrice.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 1));
};


/** @param {?proto.Instrument|undefined} value */
proto.AverageFillPrice.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.AverageFillPrice.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.AverageFillPrice.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Side side = 2;
 * @return {!proto.Side}
 */
proto.AverageFillPrice.prototype.getSide = function() {
  return /** @type {!proto.Side} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.Side} value */
proto.AverageFillPrice.prototype.setSide = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Qty cumulativeQuantity = 3;
 * @return {?proto.Qty}
 */
proto.AverageFillPrice.prototype.getCumulativequantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 3));
};


/** @param {?proto.Qty|undefined} value */
proto.AverageFillPrice.prototype.setCumulativequantity = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.AverageFillPrice.prototype.clearCumulativequantity = function() {
  this.setCumulativequantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.AverageFillPrice.prototype.hasCumulativequantity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Qty averagePrice = 4;
 * @return {?proto.Qty}
 */
proto.AverageFillPrice.prototype.getAverageprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 4));
};


/** @param {?proto.Qty|undefined} value */
proto.AverageFillPrice.prototype.setAverageprice = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.AverageFillPrice.prototype.clearAverageprice = function() {
  this.setAverageprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.AverageFillPrice.prototype.hasAverageprice = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FixMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FixMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FixMessage.displayName = 'proto.FixMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FixMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.FixMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FixMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FixMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && rpc_base_pb.Map.toObject(includeInstance, f),
    body: (f = msg.getBody()) && rpc_base_pb.Map.toObject(includeInstance, f),
    footer: (f = msg.getFooter()) && rpc_base_pb.Map.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FixMessage}
 */
proto.FixMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FixMessage;
  return proto.FixMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FixMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FixMessage}
 */
proto.FixMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new rpc_base_pb.Map;
      reader.readMessage(value,rpc_base_pb.Map.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new rpc_base_pb.Map;
      reader.readMessage(value,rpc_base_pb.Map.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 3:
      var value = new rpc_base_pb.Map;
      reader.readMessage(value,rpc_base_pb.Map.deserializeBinaryFromReader);
      msg.setFooter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FixMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FixMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FixMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FixMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      rpc_base_pb.Map.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      rpc_base_pb.Map.serializeBinaryToWriter
    );
  }
  f = message.getFooter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_base_pb.Map.serializeBinaryToWriter
    );
  }
};


/**
 * optional Map header = 1;
 * @return {?proto.Map}
 */
proto.FixMessage.prototype.getHeader = function() {
  return /** @type{?proto.Map} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Map, 1));
};


/** @param {?proto.Map|undefined} value */
proto.FixMessage.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FixMessage.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FixMessage.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Map body = 2;
 * @return {?proto.Map}
 */
proto.FixMessage.prototype.getBody = function() {
  return /** @type{?proto.Map} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Map, 2));
};


/** @param {?proto.Map|undefined} value */
proto.FixMessage.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FixMessage.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FixMessage.prototype.hasBody = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Map footer = 3;
 * @return {?proto.Map}
 */
proto.FixMessage.prototype.getFooter = function() {
  return /** @type{?proto.Map} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Map, 3));
};


/** @param {?proto.Map|undefined} value */
proto.FixMessage.prototype.setFooter = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.FixMessage.prototype.clearFooter = function() {
  this.setFooter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FixMessage.prototype.hasFooter = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FIXOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FIXOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FIXOrder.displayName = 'proto.FIXOrder';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FIXOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.FIXOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FIXOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FIXOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    brokerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: (f = msg.getMessage()) && proto.FixMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FIXOrder}
 */
proto.FIXOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FIXOrder;
  return proto.FIXOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FIXOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FIXOrder}
 */
proto.FIXOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerid(value);
      break;
    case 2:
      var value = new proto.FixMessage;
      reader.readMessage(value,proto.FixMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FIXOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FIXOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FIXOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FIXOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrokerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FixMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string brokerId = 1;
 * @return {string}
 */
proto.FIXOrder.prototype.getBrokerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FIXOrder.prototype.setBrokerid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FixMessage message = 2;
 * @return {?proto.FixMessage}
 */
proto.FIXOrder.prototype.getMessage = function() {
  return /** @type{?proto.FixMessage} */ (
    jspb.Message.getWrapperField(this, proto.FixMessage, 2));
};


/** @param {?proto.FixMessage|undefined} value */
proto.FIXOrder.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FIXOrder.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FIXOrder.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OrderBase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OrderBase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.OrderBase.displayName = 'proto.OrderBase';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OrderBase.prototype.toObject = function(opt_includeInstance) {
  return proto.OrderBase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OrderBase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OrderBase.toObject = function(includeInstance, msg) {
  var f, obj = {
    brokerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    brokeralgo: (f = msg.getBrokeralgo()) && rpc_fix_admin_pb.BrokerAlgo.toObject(includeInstance, f),
    brokerorderid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    customfields: (f = msg.getCustomfields()) && rpc_base_pb.Map.toObject(includeInstance, f),
    displayquantity: (f = msg.getDisplayquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    executiondestination: jspb.Message.getFieldWithDefault(msg, 7, ""),
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    ordercapacity: jspb.Message.getFieldWithDefault(msg, 9, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    ordertype: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pegtomidpoint: jspb.Message.getFieldWithDefault(msg, 12, false),
    positioneffect: jspb.Message.getFieldWithDefault(msg, 13, 0),
    price: (f = msg.getPrice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    quantity: (f = msg.getQuantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    side: jspb.Message.getFieldWithDefault(msg, 16, 0),
    text: jspb.Message.getFieldWithDefault(msg, 17, ""),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 18, 0),
    originalorderid: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OrderBase}
 */
proto.OrderBase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OrderBase;
  return proto.OrderBase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OrderBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OrderBase}
 */
proto.OrderBase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = new rpc_fix_admin_pb.BrokerAlgo;
      reader.readMessage(value,rpc_fix_admin_pb.BrokerAlgo.deserializeBinaryFromReader);
      msg.setBrokeralgo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerorderid(value);
      break;
    case 5:
      var value = new rpc_base_pb.Map;
      reader.readMessage(value,rpc_base_pb.Map.deserializeBinaryFromReader);
      msg.setCustomfields(value);
      break;
    case 6:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setDisplayquantity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutiondestination(value);
      break;
    case 8:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 9:
      var value = /** @type {!proto.OrderCapacity} */ (reader.readEnum());
      msg.setOrdercapacity(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 11:
      var value = /** @type {!proto.OrderType} */ (reader.readEnum());
      msg.setOrdertype(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPegtomidpoint(value);
      break;
    case 13:
      var value = /** @type {!proto.PositionEffect} */ (reader.readEnum());
      msg.setPositioneffect(value);
      break;
    case 14:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 15:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 16:
      var value = /** @type {!proto.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 18:
      var value = /** @type {!proto.TimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalorderid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OrderBase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OrderBase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OrderBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OrderBase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrokerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBrokeralgo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_fix_admin_pb.BrokerAlgo.serializeBinaryToWriter
    );
  }
  f = message.getBrokerorderid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCustomfields();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      rpc_base_pb.Map.serializeBinaryToWriter
    );
  }
  f = message.getDisplayquantity();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getExecutiondestination();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getOrdercapacity();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOrdertype();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getPegtomidpoint();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getPositioneffect();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = message.getOriginalorderid();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional string brokerId = 1;
 * @return {string}
 */
proto.OrderBase.prototype.getBrokerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setBrokerid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.OrderBase.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BrokerAlgo brokerAlgo = 3;
 * @return {?proto.BrokerAlgo}
 */
proto.OrderBase.prototype.getBrokeralgo = function() {
  return /** @type{?proto.BrokerAlgo} */ (
    jspb.Message.getWrapperField(this, rpc_fix_admin_pb.BrokerAlgo, 3));
};


/** @param {?proto.BrokerAlgo|undefined} value */
proto.OrderBase.prototype.setBrokeralgo = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.OrderBase.prototype.clearBrokeralgo = function() {
  this.setBrokeralgo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasBrokeralgo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string brokerOrderId = 4;
 * @return {string}
 */
proto.OrderBase.prototype.getBrokerorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setBrokerorderid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Map customFields = 5;
 * @return {?proto.Map}
 */
proto.OrderBase.prototype.getCustomfields = function() {
  return /** @type{?proto.Map} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Map, 5));
};


/** @param {?proto.Map|undefined} value */
proto.OrderBase.prototype.setCustomfields = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.OrderBase.prototype.clearCustomfields = function() {
  this.setCustomfields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasCustomfields = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Qty displayQuantity = 6;
 * @return {?proto.Qty}
 */
proto.OrderBase.prototype.getDisplayquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 6));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderBase.prototype.setDisplayquantity = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.OrderBase.prototype.clearDisplayquantity = function() {
  this.setDisplayquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasDisplayquantity = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string executionDestination = 7;
 * @return {string}
 */
proto.OrderBase.prototype.getExecutiondestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setExecutiondestination = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Instrument instrument = 8;
 * @return {?proto.Instrument}
 */
proto.OrderBase.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 8));
};


/** @param {?proto.Instrument|undefined} value */
proto.OrderBase.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.OrderBase.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional OrderCapacity orderCapacity = 9;
 * @return {!proto.OrderCapacity}
 */
proto.OrderBase.prototype.getOrdercapacity = function() {
  return /** @type {!proto.OrderCapacity} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.OrderCapacity} value */
proto.OrderBase.prototype.setOrdercapacity = function(value) {
  jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional string orderId = 10;
 * @return {string}
 */
proto.OrderBase.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setOrderid = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional OrderType orderType = 11;
 * @return {!proto.OrderType}
 */
proto.OrderBase.prototype.getOrdertype = function() {
  return /** @type {!proto.OrderType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.OrderType} value */
proto.OrderBase.prototype.setOrdertype = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool pegToMidpoint = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.OrderBase.prototype.getPegtomidpoint = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.OrderBase.prototype.setPegtomidpoint = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional PositionEffect positionEffect = 13;
 * @return {!proto.PositionEffect}
 */
proto.OrderBase.prototype.getPositioneffect = function() {
  return /** @type {!proto.PositionEffect} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.PositionEffect} value */
proto.OrderBase.prototype.setPositioneffect = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional Qty price = 14;
 * @return {?proto.Qty}
 */
proto.OrderBase.prototype.getPrice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 14));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderBase.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.OrderBase.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Qty quantity = 15;
 * @return {?proto.Qty}
 */
proto.OrderBase.prototype.getQuantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 15));
};


/** @param {?proto.Qty|undefined} value */
proto.OrderBase.prototype.setQuantity = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.OrderBase.prototype.clearQuantity = function() {
  this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.OrderBase.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Side side = 16;
 * @return {!proto.Side}
 */
proto.OrderBase.prototype.getSide = function() {
  return /** @type {!proto.Side} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {!proto.Side} value */
proto.OrderBase.prototype.setSide = function(value) {
  jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional string text = 17;
 * @return {string}
 */
proto.OrderBase.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional TimeInForce timeInForce = 18;
 * @return {!proto.TimeInForce}
 */
proto.OrderBase.prototype.getTimeinforce = function() {
  return /** @type {!proto.TimeInForce} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {!proto.TimeInForce} value */
proto.OrderBase.prototype.setTimeinforce = function(value) {
  jspb.Message.setProto3EnumField(this, 18, value);
};


/**
 * optional string originalOrderId = 19;
 * @return {string}
 */
proto.OrderBase.prototype.getOriginalorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.OrderBase.prototype.setOriginalorderid = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Order.displayName = 'proto.Order';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    fixorder: (f = msg.getFixorder()) && proto.FIXOrder.toObject(includeInstance, f),
    orderbase: (f = msg.getOrderbase()) && proto.OrderBase.toObject(includeInstance, f),
    matpordertype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Order}
 */
proto.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Order;
  return proto.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Order}
 */
proto.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.FIXOrder;
      reader.readMessage(value,proto.FIXOrder.deserializeBinaryFromReader);
      msg.setFixorder(value);
      break;
    case 2:
      var value = new proto.OrderBase;
      reader.readMessage(value,proto.OrderBase.deserializeBinaryFromReader);
      msg.setOrderbase(value);
      break;
    case 3:
      var value = /** @type {!proto.MatpOrderType} */ (reader.readEnum());
      msg.setMatpordertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFixorder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.FIXOrder.serializeBinaryToWriter
    );
  }
  f = message.getOrderbase();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.OrderBase.serializeBinaryToWriter
    );
  }
  f = message.getMatpordertype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional FIXOrder fixOrder = 1;
 * @return {?proto.FIXOrder}
 */
proto.Order.prototype.getFixorder = function() {
  return /** @type{?proto.FIXOrder} */ (
    jspb.Message.getWrapperField(this, proto.FIXOrder, 1));
};


/** @param {?proto.FIXOrder|undefined} value */
proto.Order.prototype.setFixorder = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Order.prototype.clearFixorder = function() {
  this.setFixorder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Order.prototype.hasFixorder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OrderBase orderBase = 2;
 * @return {?proto.OrderBase}
 */
proto.Order.prototype.getOrderbase = function() {
  return /** @type{?proto.OrderBase} */ (
    jspb.Message.getWrapperField(this, proto.OrderBase, 2));
};


/** @param {?proto.OrderBase|undefined} value */
proto.Order.prototype.setOrderbase = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.Order.prototype.clearOrderbase = function() {
  this.setOrderbase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Order.prototype.hasOrderbase = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MatpOrderType matpOrderType = 3;
 * @return {!proto.MatpOrderType}
 */
proto.Order.prototype.getMatpordertype = function() {
  return /** @type {!proto.MatpOrderType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.MatpOrderType} value */
proto.Order.prototype.setMatpordertype = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TradeMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TradeMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TradeMessage.displayName = 'proto.TradeMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TradeMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.TradeMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TradeMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TradeMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    averageprice: (f = msg.getAverageprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    brokerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    brokerorderid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cumulativequantity: (f = msg.getCumulativequantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    executionid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    executiontype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    hierarchy: jspb.Message.getFieldWithDefault(msg, 9, 0),
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    lastmarket: jspb.Message.getFieldWithDefault(msg, 11, ""),
    lastprice: (f = msg.getLastprice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    lastquantity: (f = msg.getLastquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    leavesquantity: (f = msg.getLeavesquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    ordercapacity: jspb.Message.getFieldWithDefault(msg, 15, 0),
    orderdisplayquantity: (f = msg.getOrderdisplayquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderid: jspb.Message.getFieldWithDefault(msg, 17, ""),
    orderquantity: (f = msg.getOrderquantity()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    orderstatus: jspb.Message.getFieldWithDefault(msg, 19, 0),
    ordertype: jspb.Message.getFieldWithDefault(msg, 20, 0),
    originalorderid: jspb.Message.getFieldWithDefault(msg, 21, ""),
    originator: jspb.Message.getFieldWithDefault(msg, 22, 0),
    positioneffect: jspb.Message.getFieldWithDefault(msg, 23, 0),
    price: (f = msg.getPrice()) && rpc_base_pb.Qty.toObject(includeInstance, f),
    reportid: jspb.Message.getFieldWithDefault(msg, 25, ""),
    sendingtime: (f = msg.getSendingtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    side: jspb.Message.getFieldWithDefault(msg, 27, 0),
    text: jspb.Message.getFieldWithDefault(msg, 28, ""),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 29, 0),
    transacttime: (f = msg.getTransacttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && proto.FixMessage.toObject(includeInstance, f),
    trademessagetype: jspb.Message.getFieldWithDefault(msg, 32, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TradeMessage}
 */
proto.TradeMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TradeMessage;
  return proto.TradeMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TradeMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TradeMessage}
 */
proto.TradeMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setAverageprice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerorderid(value);
      break;
    case 6:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setCumulativequantity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionid(value);
      break;
    case 8:
      var value = /** @type {!proto.ExecutionType} */ (reader.readEnum());
      msg.setExecutiontype(value);
      break;
    case 9:
      var value = /** @type {!proto.Hierarchy} */ (reader.readEnum());
      msg.setHierarchy(value);
      break;
    case 10:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastmarket(value);
      break;
    case 12:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastprice(value);
      break;
    case 13:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLastquantity(value);
      break;
    case 14:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setLeavesquantity(value);
      break;
    case 15:
      var value = /** @type {!proto.OrderCapacity} */ (reader.readEnum());
      msg.setOrdercapacity(value);
      break;
    case 16:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setOrderdisplayquantity(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 18:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setOrderquantity(value);
      break;
    case 19:
      var value = /** @type {!proto.OrderStatusType} */ (reader.readEnum());
      msg.setOrderstatus(value);
      break;
    case 20:
      var value = /** @type {!proto.OrderType} */ (reader.readEnum());
      msg.setOrdertype(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalorderid(value);
      break;
    case 22:
      var value = /** @type {!proto.Originator} */ (reader.readEnum());
      msg.setOriginator(value);
      break;
    case 23:
      var value = /** @type {!proto.PositionEffect} */ (reader.readEnum());
      msg.setPositioneffect(value);
      break;
    case 24:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportid(value);
      break;
    case 26:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSendingtime(value);
      break;
    case 27:
      var value = /** @type {!proto.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 29:
      var value = /** @type {!proto.TimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 30:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTransacttime(value);
      break;
    case 31:
      var value = new proto.FixMessage;
      reader.readMessage(value,proto.FixMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 32:
      var value = /** @type {!proto.TradeMessageType} */ (reader.readEnum());
      msg.setTrademessagetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TradeMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TradeMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TradeMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TradeMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAverageprice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getBrokerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBrokerorderid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCumulativequantity();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getExecutionid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExecutiontype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getHierarchy();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getLastmarket();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLastprice();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLastquantity();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getLeavesquantity();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrdercapacity();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getOrderdisplayquantity();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getOrderquantity();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getOrderstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = message.getOrdertype();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getOriginalorderid();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getOriginator();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = message.getPositioneffect();
  if (f !== 0.0) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
  f = message.getReportid();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getSendingtime();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      27,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = message.getTransacttime();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.FixMessage.serializeBinaryToWriter
    );
  }
  f = message.getTrademessagetype();
  if (f !== 0.0) {
    writer.writeEnum(
      32,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.TradeMessage.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.TradeMessage.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Qty averagePrice = 3;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getAverageprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 3));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setAverageprice = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.TradeMessage.prototype.clearAverageprice = function() {
  this.setAverageprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasAverageprice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string brokerId = 4;
 * @return {string}
 */
proto.TradeMessage.prototype.getBrokerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setBrokerid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string brokerOrderId = 5;
 * @return {string}
 */
proto.TradeMessage.prototype.getBrokerorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setBrokerorderid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Qty cumulativeQuantity = 6;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getCumulativequantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 6));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setCumulativequantity = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.TradeMessage.prototype.clearCumulativequantity = function() {
  this.setCumulativequantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasCumulativequantity = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string executionId = 7;
 * @return {string}
 */
proto.TradeMessage.prototype.getExecutionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setExecutionid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ExecutionType executionType = 8;
 * @return {!proto.ExecutionType}
 */
proto.TradeMessage.prototype.getExecutiontype = function() {
  return /** @type {!proto.ExecutionType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.ExecutionType} value */
proto.TradeMessage.prototype.setExecutiontype = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Hierarchy hierarchy = 9;
 * @return {!proto.Hierarchy}
 */
proto.TradeMessage.prototype.getHierarchy = function() {
  return /** @type {!proto.Hierarchy} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.Hierarchy} value */
proto.TradeMessage.prototype.setHierarchy = function(value) {
  jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Instrument instrument = 10;
 * @return {?proto.Instrument}
 */
proto.TradeMessage.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 10));
};


/** @param {?proto.Instrument|undefined} value */
proto.TradeMessage.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.TradeMessage.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string lastMarket = 11;
 * @return {string}
 */
proto.TradeMessage.prototype.getLastmarket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setLastmarket = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional Qty lastPrice = 12;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getLastprice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 12));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setLastprice = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.TradeMessage.prototype.clearLastprice = function() {
  this.setLastprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasLastprice = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Qty lastQuantity = 13;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getLastquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 13));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setLastquantity = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.TradeMessage.prototype.clearLastquantity = function() {
  this.setLastquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasLastquantity = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Qty leavesQuantity = 14;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getLeavesquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 14));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setLeavesquantity = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.TradeMessage.prototype.clearLeavesquantity = function() {
  this.setLeavesquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasLeavesquantity = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional OrderCapacity orderCapacity = 15;
 * @return {!proto.OrderCapacity}
 */
proto.TradeMessage.prototype.getOrdercapacity = function() {
  return /** @type {!proto.OrderCapacity} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {!proto.OrderCapacity} value */
proto.TradeMessage.prototype.setOrdercapacity = function(value) {
  jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional Qty orderDisplayQuantity = 16;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getOrderdisplayquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 16));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setOrderdisplayquantity = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.TradeMessage.prototype.clearOrderdisplayquantity = function() {
  this.setOrderdisplayquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasOrderdisplayquantity = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string orderId = 17;
 * @return {string}
 */
proto.TradeMessage.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setOrderid = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Qty orderQuantity = 18;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getOrderquantity = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 18));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setOrderquantity = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.TradeMessage.prototype.clearOrderquantity = function() {
  this.setOrderquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasOrderquantity = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional OrderStatusType orderStatus = 19;
 * @return {!proto.OrderStatusType}
 */
proto.TradeMessage.prototype.getOrderstatus = function() {
  return /** @type {!proto.OrderStatusType} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {!proto.OrderStatusType} value */
proto.TradeMessage.prototype.setOrderstatus = function(value) {
  jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional OrderType orderType = 20;
 * @return {!proto.OrderType}
 */
proto.TradeMessage.prototype.getOrdertype = function() {
  return /** @type {!proto.OrderType} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {!proto.OrderType} value */
proto.TradeMessage.prototype.setOrdertype = function(value) {
  jspb.Message.setProto3EnumField(this, 20, value);
};


/**
 * optional string originalOrderId = 21;
 * @return {string}
 */
proto.TradeMessage.prototype.getOriginalorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setOriginalorderid = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional Originator originator = 22;
 * @return {!proto.Originator}
 */
proto.TradeMessage.prototype.getOriginator = function() {
  return /** @type {!proto.Originator} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {!proto.Originator} value */
proto.TradeMessage.prototype.setOriginator = function(value) {
  jspb.Message.setProto3EnumField(this, 22, value);
};


/**
 * optional PositionEffect positionEffect = 23;
 * @return {!proto.PositionEffect}
 */
proto.TradeMessage.prototype.getPositioneffect = function() {
  return /** @type {!proto.PositionEffect} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {!proto.PositionEffect} value */
proto.TradeMessage.prototype.setPositioneffect = function(value) {
  jspb.Message.setProto3EnumField(this, 23, value);
};


/**
 * optional Qty price = 24;
 * @return {?proto.Qty}
 */
proto.TradeMessage.prototype.getPrice = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 24));
};


/** @param {?proto.Qty|undefined} value */
proto.TradeMessage.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.TradeMessage.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string reportId = 25;
 * @return {string}
 */
proto.TradeMessage.prototype.getReportid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setReportid = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional google.protobuf.Timestamp sendingTime = 26;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.TradeMessage.prototype.getSendingtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 26));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.TradeMessage.prototype.setSendingtime = function(value) {
  jspb.Message.setWrapperField(this, 26, value);
};


proto.TradeMessage.prototype.clearSendingtime = function() {
  this.setSendingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasSendingtime = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Side side = 27;
 * @return {!proto.Side}
 */
proto.TradeMessage.prototype.getSide = function() {
  return /** @type {!proto.Side} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {!proto.Side} value */
proto.TradeMessage.prototype.setSide = function(value) {
  jspb.Message.setProto3EnumField(this, 27, value);
};


/**
 * optional string text = 28;
 * @return {string}
 */
proto.TradeMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.TradeMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional TimeInForce timeInForce = 29;
 * @return {!proto.TimeInForce}
 */
proto.TradeMessage.prototype.getTimeinforce = function() {
  return /** @type {!proto.TimeInForce} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {!proto.TimeInForce} value */
proto.TradeMessage.prototype.setTimeinforce = function(value) {
  jspb.Message.setProto3EnumField(this, 29, value);
};


/**
 * optional google.protobuf.Timestamp transactTime = 30;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.TradeMessage.prototype.getTransacttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 30));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.TradeMessage.prototype.setTransacttime = function(value) {
  jspb.Message.setWrapperField(this, 30, value);
};


proto.TradeMessage.prototype.clearTransacttime = function() {
  this.setTransacttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasTransacttime = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional FixMessage message = 31;
 * @return {?proto.FixMessage}
 */
proto.TradeMessage.prototype.getMessage = function() {
  return /** @type{?proto.FixMessage} */ (
    jspb.Message.getWrapperField(this, proto.FixMessage, 31));
};


/** @param {?proto.FixMessage|undefined} value */
proto.TradeMessage.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 31, value);
};


proto.TradeMessage.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TradeMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional TradeMessageType tradeMessageType = 32;
 * @return {!proto.TradeMessageType}
 */
proto.TradeMessage.prototype.getTrademessagetype = function() {
  return /** @type {!proto.TradeMessageType} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {!proto.TradeMessageType} value */
proto.TradeMessage.prototype.setTrademessagetype = function(value) {
  jspb.Message.setProto3EnumField(this, 32, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PositionKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PositionKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.PositionKey.displayName = 'proto.PositionKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PositionKey.prototype.toObject = function(opt_includeInstance) {
  return proto.PositionKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PositionKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PositionKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.Instrument.toObject(includeInstance, f),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    traderid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PositionKey}
 */
proto.PositionKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PositionKey;
  return proto.PositionKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PositionKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PositionKey}
 */
proto.PositionKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Instrument;
      reader.readMessage(value,proto.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraderid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PositionKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PositionKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PositionKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PositionKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Instrument.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTraderid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Instrument instrument = 1;
 * @return {?proto.Instrument}
 */
proto.PositionKey.prototype.getInstrument = function() {
  return /** @type{?proto.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.Instrument, 1));
};


/** @param {?proto.Instrument|undefined} value */
proto.PositionKey.prototype.setInstrument = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.PositionKey.prototype.clearInstrument = function() {
  this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.PositionKey.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.PositionKey.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.PositionKey.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string traderId = 3;
 * @return {string}
 */
proto.PositionKey.prototype.getTraderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.PositionKey.prototype.setTraderid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Position.displayName = 'proto.Position';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionkey: (f = msg.getPositionkey()) && proto.PositionKey.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && rpc_base_pb.Qty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Position}
 */
proto.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Position;
  return proto.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Position}
 */
proto.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PositionKey;
      reader.readMessage(value,proto.PositionKey.deserializeBinaryFromReader);
      msg.setPositionkey(value);
      break;
    case 2:
      var value = new rpc_base_pb.Qty;
      reader.readMessage(value,rpc_base_pb.Qty.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionkey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PositionKey.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      rpc_base_pb.Qty.serializeBinaryToWriter
    );
  }
};


/**
 * optional PositionKey positionKey = 1;
 * @return {?proto.PositionKey}
 */
proto.Position.prototype.getPositionkey = function() {
  return /** @type{?proto.PositionKey} */ (
    jspb.Message.getWrapperField(this, proto.PositionKey, 1));
};


/** @param {?proto.PositionKey|undefined} value */
proto.Position.prototype.setPositionkey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Position.prototype.clearPositionkey = function() {
  this.setPositionkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Position.prototype.hasPositionkey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Qty position = 2;
 * @return {?proto.Qty}
 */
proto.Position.prototype.getPosition = function() {
  return /** @type{?proto.Qty} */ (
    jspb.Message.getWrapperField(this, rpc_base_pb.Qty, 2));
};


/** @param {?proto.Qty|undefined} value */
proto.Position.prototype.setPosition = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.Position.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Position.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.OrderType = {
  UNKNOWNORDERTYPE: 0,
  MARKET: 1,
  LIMIT: 2,
  STOP: 3,
  STOPLIMIT: 4,
  MARKETONCLOSE: 5,
  WITHORWITHOUT: 6,
  LIMITORBETTER: 7,
  LIMITWITHORWITHOUT: 8,
  ONBASIS: 9,
  ONCLOSE: 10,
  LIMITONCLOSE: 11,
  FOREXMARKET: 12,
  PREVIOUSLYQUOTED: 13,
  PREVIOUSLYINDICATED: 14,
  FOREXLIMIT: 15,
  FOREXSWAP: 16,
  FOREXPREVIOUSLYQUOTED: 17,
  FUNARI: 18,
  PEGGED: 19
};

/**
 * @enum {number}
 */
proto.OrderStatusType = {
  NEW: 0,
  PARTIALLYFILLED: 1,
  FILLED: 2,
  DONEFORDAY: 3,
  CANCELED: 4,
  REPLACED: 5,
  PENDINGCANCEL: 6,
  STOPPED: 7,
  REJECTED: 8,
  SUSPENDED: 9,
  PENDINGNEW: 10,
  CALCULATED: 11,
  EXPIRED: 12,
  ACCEPTEDFORBIDDING: 13,
  PENDINGREPLACE: 14,
  UNKNOWNORDERSTATUS: 99
};

/**
 * @enum {number}
 */
proto.Side = {
  UNKNOWNSIDE: 0,
  BUY: 1,
  SELL: 2,
  BUYMINUS: 3,
  SELLPLUS: 4,
  SELLSHORT: 5,
  SELLSHORTEXEMPT: 6,
  UNDISCLOSED: 7,
  CROSS: 8,
  CROSSSHORT: 9,
  NOSIDE: 10
};

/**
 * @enum {number}
 */
proto.SecurityType = {
  UNKNOWNSECURITYTYPE: 0,
  COMMONSTOCK: 1,
  OPTION: 2,
  FUTURE: 3,
  CONVERTIBLEBOND: 4,
  CURRENCY: 5
};

/**
 * @enum {number}
 */
proto.ReportType = {
  EXECUTIONREPORT: 0,
  CANCELREJECT: 1
};

/**
 * @enum {number}
 */
proto.OrderCapacity = {
  UNKNOWNORDERCAPACITY: 0,
  AGENCY: 1,
  PROPRIETARY: 2,
  INDIVIDUAL: 3,
  PRINCIPAL: 4,
  RISKLESSPRINCIPAL: 5,
  AGENTOTHERMEMBER: 6
};

/**
 * @enum {number}
 */
proto.PositionEffect = {
  UNKNOWNPOSITIONEFFECT: 0,
  OPEN: 1,
  CLOSE: 2
};

/**
 * @enum {number}
 */
proto.TimeInForce = {
  UNKNOWNTIMEINFORCE: 0,
  DAY: 1,
  GOODTILLCANCEL: 2,
  ATTHEOPENING: 3,
  IMMEDIATEORCANCEL: 4,
  FILLORKILL: 5,
  GOODTILLCROSSING: 6,
  GOODTILLDATE: 7,
  ATTHECLOSE: 8
};

/**
 * @enum {number}
 */
proto.MatpOrderType = {
  ORDERSINGLETYPE: 0,
  ORDERREPLACETYPE: 1,
  ORDERCANCELTYPE: 2,
  FIXORDERTYPE: 3
};

/**
 * @enum {number}
 */
proto.ExecutionType = {
  UNKNOWNEXECUTIONTYPE: 0,
  NEWEXECUTIONTYPE: 1,
  PARTIALFILLEXECUTIONTYPE: 2,
  FILLEXECUTIONTYPE: 3,
  DONEFORDAYEXECUTIONTYPE: 4,
  CANCELEDEXECUTIONTYPE: 5,
  REPLACEEXECUTIONTYPE: 6,
  PENDINGCANCELEXECUTIONTYPE: 7,
  STOPPEDEXECUTIONTYPE: 8,
  REJECTEDEXECUTIONTYPE: 9,
  SUSPENDEDEXECUTIONTYPE: 10,
  PENDINGNEWEXECUTIONTYPE: 11,
  CALCULATEDEXECUTIONTYPE: 12,
  EXPIREDEXECUTIONTYPE: 13,
  RESTATEDEXECUTIONTYPE: 14,
  PENDINGREPLACEEXECUTIONTYPE: 15,
  TRADEEXECUTIONTYPE: 16,
  TRADECORRECTEXECUTIONTYPE: 17,
  TRADECANCELEXECUTIONTYPE: 18,
  ORDERSTATUSEXECUTIONTYPE: 19
};

/**
 * @enum {number}
 */
proto.Hierarchy = {
  FLATHIERARCHY: 0,
  PARENTHIERARCHY: 1,
  CHILDHIERARCHY: 2
};

/**
 * @enum {number}
 */
proto.Originator = {
  SERVERORIGINATOR: 0,
  BROKERORIGINATOR: 1
};

/**
 * @enum {number}
 */
proto.TradeMessageType = {
  TRADEMESSAGEEXECUTIONREPORT: 0,
  TRADEMESSAGEORDERCANCELREJECT: 1,
  TRADEMESSAGEFIXRESPONSE: 2
};

goog.object.extend(exports, proto);
